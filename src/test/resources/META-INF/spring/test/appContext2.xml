<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- LOG4J Initializer -->
    <bean id="log4jInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.springframework.util.Log4jConfigurer.initLogging"/>
        <property name="arguments">
            <list>
                <value>classpath:META-INF/logging/log4j.properties</value>  
            </list>
        </property>
    </bean>
    
    <!-- Client Properties -->
    <bean id="clientProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:META-INF/properties/config.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>
    
    <!-- Map to store server events -->
    <bean id="events" class="java.util.concurrent.ConcurrentHashMap"/>
    
    <!-- WebSocket Container -->
    <bean id="wsContainer"
          class="javax.websocket.ContainerProvider"
          factory-method="getWebSocketContainer"/>
    
    <!-- WebSocket Client -->
    <bean id="wsClient" class="org.springframework.web.socket.client.standard.StandardWebSocketClient">
        <constructor-arg ref="wsContainer"/>
    </bean>

    <!-- Handlers -->
    <bean id="myHandler" class="co.niagarasystems.west.test.spring.MyHandler">
        <property name="events" ref="events"/>
    </bean>
    <bean id="headers" class="org.springframework.web.socket.WebSocketHttpHeaders"/>
    <bean id="springWestClient" class="co.niagarasystems.west.client.spring.SpringWestClient">
        <property name="session">
            <value>#{ wsClient.doHandshake(myHandler, headers, T(java.net.URI).create(clientProps.getProperty('conn.uri'))).get() }</value>
        </property>
    </bean>

</beans>
